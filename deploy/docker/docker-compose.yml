version: "3.9"
services:
  mongo:
    image: mongo:7
    restart: unless-stopped
    ports: ["27017:27017"]
    volumes: [ "mongo_data:/data/db" ]

  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis:7
    restart: unless-stopped
    ports: ["6379:6379"]
    command: ["redis-server", "--appendonly", "yes"]

  api:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.api
    restart: unless-stopped
    env_file:
      - ../../.env
    environment:
      MONGO_URI: ${MONGO_URI:-mongodb://mongo:27017/chronos}
      BROKER_URL: ${BROKER_URL:-amqp://guest:guest@rabbitmq:5672//}
      RESULT_BACKEND: ${RESULT_BACKEND:-redis://redis:6379/0}
      APP_NAME: ${APP_NAME:-chronos-ge}
      APP_VERSION: ${APP_VERSION:-0.1.0}
      API_PORT: ${API_PORT:-8000}
    ports:
      - "${API_PORT:-8000}:${API_PORT:-8000}"
    depends_on: [ mongo, rabbitmq, redis ]

volumes:
  mongo_data:
