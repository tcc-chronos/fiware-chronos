services:
  mongo:
    image: mongo:7
    restart: unless-stopped
    ports: ["27017:27017"]
    volumes: [ "mongo_data:/data/db" ]

  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: chronos
      RABBITMQ_DEFAULT_PASS: chronos
      RABBITMQ_DEFAULT_VHOST: chronos

  redis:
    image: redis:7
    restart: unless-stopped
    ports: ["6379:6379"]
    command: ["redis-server", "--appendonly", "yes"]

  worker:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.worker
    restart: unless-stopped
    env_file:
      - ../../.env
    environment:
      # Database
      DB_MONGO_URI: ${DB_MONGO_URI:-mongodb://mongo:27017/chronos}
      DB_DATABASE_NAME: ${DB_DATABASE_NAME:-chronos}
      # Celery
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-amqp://chronos:chronos@rabbitmq:5672/chronos}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
      # FIWARE Services (External)
      FIWARE_ORION_URL: ${FIWARE_ORION_URL}
      FIWARE_STH_URL: ${FIWARE_STH_URL}
      FIWARE_IOT_AGENT_URL: ${FIWARE_IOT_AGENT_URL}
      FIWARE_STH_MAX_PER_REQUEST: ${FIWARE_STH_MAX_PER_REQUEST:-100}
      # Application
      ENVIRONMENT: ${ENVIRONMENT:-development}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    depends_on: [mongo, rabbitmq, redis]
    volumes:
      - trained_models:/tmp/models

  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"

  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - /var/log:/var/log
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    depends_on: [loki]

  grafana:
    image: grafana/grafana:10.3.1
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on: [loki]

  api:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.api
    restart: unless-stopped
    env_file:
      - ../../.env
    environment:
      # Database
      DB_MONGO_URI: ${DB_MONGO_URI:-mongodb://mongo:27017/chronos}
      DB_DATABASE_NAME: ${DB_DATABASE_NAME:-chronos}
      # Celery
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-amqp://chronos:chronos@rabbitmq:5672/chronos}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
      # FIWARE Services (External)
      FIWARE_ORION_URL: ${FIWARE_ORION_URL}
      FIWARE_STH_URL: ${FIWARE_STH_URL}
      FIWARE_IOT_AGENT_URL: ${FIWARE_IOT_AGENT_URL}
      FIWARE_STH_MAX_PER_REQUEST: ${FIWARE_STH_MAX_PER_REQUEST:-100}
      # Application
      GE_TITLE: ${GE_TITLE:-chronos-ge}
      GE_VERSION: ${GE_VERSION:-0.1.0}
      GE_PORT: ${GE_PORT:-8000}
      GIT_COMMIT: ${GIT_COMMIT:-unknown}
      BUILD_TIME: ${BUILD_TIME:-unknown}
      ENVIRONMENT: ${ENVIRONMENT:-development}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    ports:
      - "${GE_PORT:-8000}:${GE_PORT:-8000}"
    depends_on: [mongo, rabbitmq, redis]
    volumes:
      - trained_models:/tmp/models

volumes:
  mongo_data:
  trained_models:
